name: 'threadit: continuous deployment (prod)'

on:
  pull_request:
    branches: [ main ]

jobs:    
  build-web:
    name: 'threadit-web: continuous deployment - build'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./threadit-web
    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: 16.x

    - name: Install dependencies
      run: yarn install --immutable

    - name: Build
      run: yarn build
      
    - name: Upload production-ready build files
      uses: actions/upload-artifact@v2
      with:
        name: threadit-web-static
        path: ./threadit-web/build
        
  build-api:
    name: Build API
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./threadit-api
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Install .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0.*

    - name: Build threadit-api (Linux x64 musl)
      run: |
        dotnet restore -r linux-musl-x64 /p:PublishReadyToRun=true
        dotnet publish -c Release -r linux-musl-x64 -o ./app-linux-musl-x64 --self-contained true --no-restore /p:PublishReadyToRun=true /p:PublishSingleFile=true
        
    - name: Upload backend build artifacts (Linux x64 musl)
      uses: actions/upload-artifact@v2
      with:
        name: threadit-api-linux-musl-x64
        path: ./app-linux-musl-x64

  publish-docker-api:
    name: Publish Docker (API)
    needs: build-api
    runs-on: ubuntu-latest
    environment: Publish API
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: threadit-api-linux-musl-x64
        path: ./.docker/api/app-linux-musl-x64

    - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: noahc3/threadit-api
      
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          file: ./.docker/api/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

publish-docker-web:
    name: Publish Docker (Web)
    needs: build-web
    runs-on: ubuntu-latest
    environment: Publish Web
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: threadit-web-static
        path: ./.docker/web/static

    - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: noahc3/threadit-web
      
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          file: ./.docker/web/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}